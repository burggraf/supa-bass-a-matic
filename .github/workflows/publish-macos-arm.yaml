name: "publish-macos-arm"

on:
  push:
    branches:
      - release

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          #- platform: "macos-latest" # for Intel based macs.
          #  args: "--target x86_64-apple-darwin"
          #- platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
          #  args: ""
          #- platform: "windows-latest"
          #  args: ""

    runs-on: ${{ matrix.platform }}
    env:
      SUPABASE_URL_ENCRYPTED: ${{ secrets.SUPABASE_URL_ENCRYPTED }}
      SUPABASE_URL_ENCRYPTION_KEY: ${{ secrets.SUPABASE_URL_ENCRYPTION_KEY }}
      SUPABASE_ANON_KEY_ENCRYPTED: ${{ secrets.SUPABASE_ANON_KEY_ENCRYPTED }}
      SUPABASE_ANON_KEY_ENCRYPTION_KEY: ${{ secrets.SUPABASE_ANON_KEY_ENCRYPTION_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Set environment variables
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV
          echo "IDENTIFIER=$(node -p "require('./package.json').identifier")" >> $GITHUB_ENV    
          echo "DESCRIPTION=$(node -p "require('./package.json').description")" >> $GITHUB_ENV

      - name: Check environment variables
        run: |
          echo "ENV VERSION: ${{ env.VERSION }}"
          echo "ENV NAME: ${{ env.NAME }}"
          echo "ENV IDENTIFIER: ${{ env.IDENTIFIER }}"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install npm dependencies
        run: npm install

      - name: Build web assets
        run: npm run build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ env.NAME }}-${{ env.VERSION }}
          releaseName: "${{ env.NAME }} ${{ env.VERSION }}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          artifactName: "${{ env.NAME }}-${{ env.VERSION }}-macos-arm"
          distPath: ./build
          bundleIdentifier: com.supabasecommunity.supabassomatic
          appName: "supa-bass-o-matic"
          appVersion: "0.1.0"
          artifactPaths: |
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.app
