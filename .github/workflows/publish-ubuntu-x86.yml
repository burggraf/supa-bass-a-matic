name: "publish-ubuntu-x86"

on:
  push:
    branches:
      - release

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          #- platform: "macos-latest" # for Arm based macs (M1 and above).
          #  args: "--target aarch64-apple-darwin"
          #- platform: "macos-latest" # for Intel based macs.
          #  args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          #- platform: "windows-latest"
          #  args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install npm dependencies
        run: npm install

      - name: Build web assets
        run: npm run build

      - name: List build directory
        shell: bash
        run: |
          echo "Listing target directory contents:"
          ls -R src-tauri/target/release/bundle/

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v0.1.0
          releaseName: "App v0.1.0"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          distPath: ./build
          bundleIdentifier: com.supabasecommunity.supabassomatic
          appName: "supa-bass-o-matic"
          appVersion: "0.1.0"
          artifactPaths: |
            src-tauri/target/release/bundle/**/*.deb*
            src-tauri/target/release/bundle/**/*.rpm*
            src-tauri/target/release/bundle/**/*.AppImage*
